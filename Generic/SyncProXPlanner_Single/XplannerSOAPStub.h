/* XplannerSOAPStub.h
   Generated by gSOAP 2.7.10 from Xplanner.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef XplannerSOAPStub_H
#define XplannerSOAPStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (7)
/* Primitive xsd:anyType schema type: */
class SOAP_CMAC xsd__anyType
{
public:
	char *__item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyType() : __item(NULL), soap(NULL) { }
	virtual ~xsd__anyType() { }
};
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (9)
/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean : public xsd__anyType
{
public:
	bool __item;
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_xsd__boolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__boolean() : __item((bool)0) { }
	virtual ~xsd__boolean() { }
};
#endif

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (11)
/* Primitive xsd:dateTime schema type: */
class SOAP_CMAC xsd__dateTime : public xsd__anyType
{
public:
	time_t __item;
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_xsd__dateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__dateTime() : __item(0) { }
	virtual ~xsd__dateTime() { }
};
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (13)
/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double : public xsd__anyType
{
public:
	double __item;
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_xsd__double */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__double() : __item(0) { }
	virtual ~xsd__double() { }
};
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (15)
/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_xsd__int */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__int() : __item(0) { }
	virtual ~xsd__int() { }
};
#endif

#ifndef SOAP_TYPE_ns2__mapItem
#define SOAP_TYPE_ns2__mapItem (16)
/* ns2:mapItem */
class SOAP_CMAC ns2__mapItem : public xsd__anyType
{
public:
	xsd__anyType *key;	/* optional element of type xsd:anyType */
	xsd__anyType *value;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns2__mapItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__mapItem() : key(NULL), value(NULL) { }
	virtual ~ns2__mapItem() { }
};
#endif

#ifndef SOAP_TYPE_ns2__Map
#define SOAP_TYPE_ns2__Map (17)
/* ns2:Map */
class SOAP_CMAC ns2__Map : public xsd__anyType
{
public:
	int __sizeitem;	/* sequence of elements <item> */
	ns2__mapItem **item;	/* optional element of type ns2:mapItem */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns2__Map */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns2__Map() : __sizeitem(0), item(NULL) { }
	virtual ~ns2__Map() { }
};
#endif

#ifndef SOAP_TYPE_ns3__DomainData
#define SOAP_TYPE_ns3__DomainData (18)
/* ns3:DomainData */
class SOAP_CMAC ns3__DomainData : public xsd__anyType
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns3__DomainData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns3__DomainData() : id(0), lastUpdateTime(NULL) { }
	virtual ~ns3__DomainData() { }
};
#endif

#ifndef SOAP_TYPE_ns5__QueryException
#define SOAP_TYPE_ns5__QueryException (33)
/* Primitive ns5:QueryException schema type: */
class SOAP_CMAC ns5__QueryException : public xsd__anyType
{
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_ns5__QueryException */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__QueryException()  { }
	virtual ~ns5__QueryException() { }
};
#endif

#ifndef SOAP_TYPE_ns4__NoteData
#define SOAP_TYPE_ns4__NoteData (19)
/* ns4:NoteData */
class SOAP_CMAC ns4__NoteData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	int attachedToId;	/* required element of type xsd:int */
	int attachmentId;	/* required element of type xsd:int */
	int authorId;	/* required element of type xsd:int */
	char *body;	/* optional element of type xsd:string */
	char *subject;	/* optional element of type xsd:string */
	time_t *submissionTime;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns4__NoteData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__NoteData() : id(0), lastUpdateTime(NULL), attachedToId(0), attachmentId(0), authorId(0), body(NULL), subject(NULL), submissionTime(NULL) { }
	virtual ~ns4__NoteData() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ProjectData
#define SOAP_TYPE_ns4__ProjectData (20)
/* ns4:ProjectData */
class SOAP_CMAC ns4__ProjectData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	char *description;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns4__ProjectData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ProjectData() : id(0), lastUpdateTime(NULL), description(NULL), name(NULL) { }
	virtual ~ns4__ProjectData() { }
};
#endif

#ifndef SOAP_TYPE_ns4__UserStoryData
#define SOAP_TYPE_ns4__UserStoryData (21)
/* ns4:UserStoryData */
class SOAP_CMAC ns4__UserStoryData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	double actualHours;	/* required element of type xsd:double */
	double adjustedEstimatedHours;	/* required element of type xsd:double */
	bool completed;	/* required element of type xsd:boolean */
	int customerId;	/* required element of type xsd:int */
	char *description;	/* optional element of type xsd:string */
	char *dispositionName;	/* optional element of type xsd:string */
	double estimatedHours;	/* required element of type xsd:double */
	double estimatedOriginalHours;	/* required element of type xsd:double */
	int iterationId;	/* required element of type xsd:int */
	char *name;	/* optional element of type xsd:string */
	double postponedHours;	/* required element of type xsd:double */
	int priority;	/* required element of type xsd:int */
	double remainingHours;	/* required element of type xsd:double */
	int trackerId;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ns4__UserStoryData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__UserStoryData() : id(0), lastUpdateTime(NULL), actualHours(0), adjustedEstimatedHours(0), completed((bool)0), customerId(0), description(NULL), dispositionName(NULL), estimatedHours(0), estimatedOriginalHours(0), iterationId(0), name(NULL), postponedHours(0), priority(0), remainingHours(0), trackerId(0) { }
	virtual ~ns4__UserStoryData() { }
};
#endif

#ifndef SOAP_TYPE_ns4__PersonData
#define SOAP_TYPE_ns4__PersonData (22)
/* ns4:PersonData */
class SOAP_CMAC ns4__PersonData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	char *email;	/* optional element of type xsd:string */
	char *initials;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *phone;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns4__PersonData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__PersonData() : id(0), lastUpdateTime(NULL), email(NULL), initials(NULL), name(NULL), phone(NULL), userId(NULL) { }
	virtual ~ns4__PersonData() { }
};
#endif

#ifndef SOAP_TYPE_ns4__TimeEntryData
#define SOAP_TYPE_ns4__TimeEntryData (23)
/* ns4:TimeEntryData */
class SOAP_CMAC ns4__TimeEntryData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	char *description;	/* optional element of type xsd:string */
	double duration;	/* required element of type xsd:double */
	time_t *endTime;	/* optional element of type xsd:dateTime */
	int person1Id;	/* required element of type xsd:int */
	int person2Id;	/* required element of type xsd:int */
	time_t *reportDate;	/* optional element of type xsd:dateTime */
	time_t *startTime;	/* optional element of type xsd:dateTime */
	int taskId;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_ns4__TimeEntryData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__TimeEntryData() : id(0), lastUpdateTime(NULL), description(NULL), duration(0), endTime(NULL), person1Id(0), person2Id(0), reportDate(NULL), startTime(NULL), taskId(0) { }
	virtual ~ns4__TimeEntryData() { }
};
#endif

#ifndef SOAP_TYPE_ns4__TaskData
#define SOAP_TYPE_ns4__TaskData (24)
/* ns4:TaskData */
class SOAP_CMAC ns4__TaskData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	int acceptorId;	/* required element of type xsd:int */
	double actualHours;	/* required element of type xsd:double */
	double adjustedEstimatedHours;	/* required element of type xsd:double */
	bool completed;	/* required element of type xsd:boolean */
	time_t *createdDate;	/* optional element of type xsd:dateTime */
	char *description;	/* optional element of type xsd:string */
	char *dispositionName;	/* optional element of type xsd:string */
	double estimatedHours;	/* required element of type xsd:double */
	double estimatedOriginalHours;	/* required element of type xsd:double */
	char *name;	/* optional element of type xsd:string */
	double remainingHours;	/* required element of type xsd:double */
	int storyId;	/* required element of type xsd:int */
	char *type;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_ns4__TaskData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__TaskData() : id(0), lastUpdateTime(NULL), acceptorId(0), actualHours(0), adjustedEstimatedHours(0), completed((bool)0), createdDate(NULL), description(NULL), dispositionName(NULL), estimatedHours(0), estimatedOriginalHours(0), name(NULL), remainingHours(0), storyId(0), type(NULL) { }
	virtual ~ns4__TaskData() { }
};
#endif

#ifndef SOAP_TYPE_ns4__IterationData
#define SOAP_TYPE_ns4__IterationData (25)
/* ns4:IterationData */
class SOAP_CMAC ns4__IterationData
{
public:
	int id;	/* required element of type xsd:int */
	time_t *lastUpdateTime;	/* optional element of type xsd:dateTime */
	double actualHours;	/* required element of type xsd:double */
	double addedHours;	/* required element of type xsd:double */
	double adjustedEstimatedHours;	/* required element of type xsd:double */
	double daysWorked;	/* required element of type xsd:double */
	char *description;	/* optional element of type xsd:string */
	time_t *endDate;	/* optional element of type xsd:dateTime */
	double estimatedHours;	/* required element of type xsd:double */
	char *name;	/* optional element of type xsd:string */
	double overestimatedHours;	/* required element of type xsd:double */
	double postponedHours;	/* required element of type xsd:double */
	int projectId;	/* required element of type xsd:int */
	double remainingHours;	/* required element of type xsd:double */
	time_t *startDate;	/* optional element of type xsd:dateTime */
	char *statusKey;	/* optional element of type xsd:string */
	double underestimatedHours;	/* required element of type xsd:double */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_ns4__IterationData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__IterationData() : id(0), lastUpdateTime(NULL), actualHours(0), addedHours(0), adjustedEstimatedHours(0), daysWorked(0), description(NULL), endDate(NULL), estimatedHours(0), name(NULL), overestimatedHours(0), postponedHours(0), projectId(0), remainingHours(0), startDate(NULL), statusKey(NULL), underestimatedHours(0) { }
	virtual ~ns4__IterationData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCOREIterationData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCOREIterationData (26)
/* SOAP encoded array of ns4:IterationData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCOREIterationData : public xsd__anyType
{
public:
	ns4__IterationData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCOREIterationData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCOREIterationData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCOREIterationData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCOREUserStoryData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCOREUserStoryData (27)
/* SOAP encoded array of ns4:UserStoryData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCOREUserStoryData : public xsd__anyType
{
public:
	ns4__UserStoryData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCOREUserStoryData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCOREUserStoryData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCOREUserStoryData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCORETaskData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCORETaskData (28)
/* SOAP encoded array of ns4:TaskData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCORETaskData : public xsd__anyType
{
public:
	ns4__TaskData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCORETaskData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCORETaskData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCORETaskData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCORETimeEntryData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCORETimeEntryData (29)
/* SOAP encoded array of ns4:TimeEntryData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCORETimeEntryData : public xsd__anyType
{
public:
	ns4__TimeEntryData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCORETimeEntryData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCORETimeEntryData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCORETimeEntryData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCOREPersonData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCOREPersonData (30)
/* SOAP encoded array of ns4:PersonData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCOREPersonData : public xsd__anyType
{
public:
	ns4__PersonData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCOREPersonData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCOREPersonData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCOREPersonData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCOREProjectData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCOREProjectData (31)
/* SOAP encoded array of ns4:ProjectData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCOREProjectData : public xsd__anyType
{
public:
	ns4__ProjectData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCOREProjectData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCOREProjectData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCOREProjectData() { }
};
#endif

#ifndef SOAP_TYPE_ArrayOf_USCOREtns1_USCORENoteData
#define SOAP_TYPE_ArrayOf_USCOREtns1_USCORENoteData (32)
/* SOAP encoded array of ns4:NoteData schema type: */
class SOAP_CMAC ArrayOf_USCOREtns1_USCORENoteData : public xsd__anyType
{
public:
	ns4__NoteData **__ptr;
	int __size;
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_ArrayOf_USCOREtns1_USCORENoteData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ArrayOf_USCOREtns1_USCORENoteData() : __ptr(NULL), __size(0) { }
	virtual ~ArrayOf_USCOREtns1_USCORENoteData() { }
};
#endif

#ifndef SOAP_TYPE__ns1__QueryException
#define SOAP_TYPE__ns1__QueryException (52)
/* ns1:QueryException */
class SOAP_CMAC _ns1__QueryException
{
public:
	ns5__QueryException *fault;	/* optional element of type ns5:QueryException */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE__ns1__QueryException */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__QueryException() : fault(NULL), soap(NULL) { }
	virtual ~_ns1__QueryException() { }
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (54)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	_ns1__QueryException *ns1__QueryException;	/* optional element of type ns1:QueryException */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_ns6__getAttributesResponse
#define SOAP_TYPE_ns6__getAttributesResponse (58)
/* ns6:getAttributesResponse */
struct ns6__getAttributesResponse
{
public:
	ns2__Map *_getAttributesReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Map */
};
#endif

#ifndef SOAP_TYPE_ns6__getAttributes
#define SOAP_TYPE_ns6__getAttributes (62)
/* ns6:getAttributes */
struct ns6__getAttributes
{
public:
	int _objectId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse
#define SOAP_TYPE_ns6__updateResponse (63)
/* ns6:updateResponse */
struct ns6__updateResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update
#define SOAP_TYPE_ns6__update (66)
/* ns6:update */
struct ns6__update
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse_
#define SOAP_TYPE_ns6__updateResponse_ (67)
/* ns6:updateResponse */
struct ns6__updateResponse_
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update_
#define SOAP_TYPE_ns6__update_ (70)
/* ns6:update */
struct ns6__update_
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse__
#define SOAP_TYPE_ns6__updateResponse__ (71)
/* ns6:updateResponse */
struct ns6__updateResponse__
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update__
#define SOAP_TYPE_ns6__update__ (74)
/* ns6:update */
struct ns6__update__
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse___
#define SOAP_TYPE_ns6__updateResponse___ (75)
/* ns6:updateResponse */
struct ns6__updateResponse___
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update___
#define SOAP_TYPE_ns6__update___ (78)
/* ns6:update */
struct ns6__update___
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse____
#define SOAP_TYPE_ns6__updateResponse____ (79)
/* ns6:updateResponse */
struct ns6__updateResponse____
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update____
#define SOAP_TYPE_ns6__update____ (82)
/* ns6:update */
struct ns6__update____
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse_____
#define SOAP_TYPE_ns6__updateResponse_____ (83)
/* ns6:updateResponse */
struct ns6__updateResponse_____
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update_____
#define SOAP_TYPE_ns6__update_____ (86)
/* ns6:update */
struct ns6__update_____
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__updateResponse______
#define SOAP_TYPE_ns6__updateResponse______ (87)
/* ns6:updateResponse */
struct ns6__updateResponse______
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__update______
#define SOAP_TYPE_ns6__update______ (90)
/* ns6:update */
struct ns6__update______
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__getAttributeResponse
#define SOAP_TYPE_ns6__getAttributeResponse (93)
/* ns6:getAttributeResponse */
struct ns6__getAttributeResponse
{
public:
	char *_getAttributeReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns6__getAttribute
#define SOAP_TYPE_ns6__getAttribute (94)
/* ns6:getAttribute */
struct ns6__getAttribute
{
public:
	int _objectId;	/* required element of type xsd:int */
	char *_key;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns6__setAttributeResponse
#define SOAP_TYPE_ns6__setAttributeResponse (95)
/* ns6:setAttributeResponse */
struct ns6__setAttributeResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__setAttribute
#define SOAP_TYPE_ns6__setAttribute (98)
/* ns6:setAttribute */
struct ns6__setAttribute
{
public:
	int _objectId;	/* required element of type xsd:int */
	char *_key;	/* optional element of type xsd:string */
	char *_value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns6__getNoteResponse
#define SOAP_TYPE_ns6__getNoteResponse (99)
/* ns6:getNoteResponse */
struct ns6__getNoteResponse
{
public:
	ns4__NoteData *_getNoteReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__getNote
#define SOAP_TYPE_ns6__getNote (102)
/* ns6:getNote */
struct ns6__getNote
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__removeNoteResponse
#define SOAP_TYPE_ns6__removeNoteResponse (103)
/* ns6:removeNoteResponse */
struct ns6__removeNoteResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removeNote
#define SOAP_TYPE_ns6__removeNote (106)
/* ns6:removeNote */
struct ns6__removeNote
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getPersonResponse
#define SOAP_TYPE_ns6__getPersonResponse (107)
/* ns6:getPersonResponse */
struct ns6__getPersonResponse
{
public:
	ns4__PersonData *_getPersonReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:PersonData */
};
#endif

#ifndef SOAP_TYPE_ns6__getPerson
#define SOAP_TYPE_ns6__getPerson (110)
/* ns6:getPerson */
struct ns6__getPerson
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getIterationsResponse
#define SOAP_TYPE_ns6__getIterationsResponse (111)
/* ns6:getIterationsResponse */
struct ns6__getIterationsResponse
{
public:
	ArrayOf_USCOREtns1_USCOREIterationData *_getIterationsReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfIterationData */
};
#endif

#ifndef SOAP_TYPE_ns6__getIterations
#define SOAP_TYPE_ns6__getIterations (115)
/* ns6:getIterations */
struct ns6__getIterations
{
public:
	int _projectId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getCurrentIterationResponse
#define SOAP_TYPE_ns6__getCurrentIterationResponse (116)
/* ns6:getCurrentIterationResponse */
struct ns6__getCurrentIterationResponse
{
public:
	ns4__IterationData *_getCurrentIterationReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:IterationData */
};
#endif

#ifndef SOAP_TYPE_ns6__getCurrentIteration
#define SOAP_TYPE_ns6__getCurrentIteration (119)
/* ns6:getCurrentIteration */
struct ns6__getCurrentIteration
{
public:
	int _projectId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getUserStoriesResponse
#define SOAP_TYPE_ns6__getUserStoriesResponse (120)
/* ns6:getUserStoriesResponse */
struct ns6__getUserStoriesResponse
{
public:
	ArrayOf_USCOREtns1_USCOREUserStoryData *_getUserStoriesReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfUserStoryData */
};
#endif

#ifndef SOAP_TYPE_ns6__getUserStories
#define SOAP_TYPE_ns6__getUserStories (124)
/* ns6:getUserStories */
struct ns6__getUserStories
{
public:
	int _containerId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getTasksResponse
#define SOAP_TYPE_ns6__getTasksResponse (125)
/* ns6:getTasksResponse */
struct ns6__getTasksResponse
{
public:
	ArrayOf_USCOREtns1_USCORETaskData *_getTasksReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfTaskData */
};
#endif

#ifndef SOAP_TYPE_ns6__getTasks
#define SOAP_TYPE_ns6__getTasks (129)
/* ns6:getTasks */
struct ns6__getTasks
{
public:
	int _containerId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getTimeEntriesResponse
#define SOAP_TYPE_ns6__getTimeEntriesResponse (130)
/* ns6:getTimeEntriesResponse */
struct ns6__getTimeEntriesResponse
{
public:
	ArrayOf_USCOREtns1_USCORETimeEntryData *_getTimeEntriesReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfTimeEntryData */
};
#endif

#ifndef SOAP_TYPE_ns6__getTimeEntries
#define SOAP_TYPE_ns6__getTimeEntries (134)
/* ns6:getTimeEntries */
struct ns6__getTimeEntries
{
public:
	int _containerId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getCurrentTasksForPersonResponse
#define SOAP_TYPE_ns6__getCurrentTasksForPersonResponse (135)
/* ns6:getCurrentTasksForPersonResponse */
struct ns6__getCurrentTasksForPersonResponse
{
public:
	ArrayOf_USCOREtns1_USCORETaskData *_getCurrentTasksForPersonReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfTaskData */
};
#endif

#ifndef SOAP_TYPE_ns6__getCurrentTasksForPerson
#define SOAP_TYPE_ns6__getCurrentTasksForPerson (138)
/* ns6:getCurrentTasksForPerson */
struct ns6__getCurrentTasksForPerson
{
public:
	int _personId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__addTaskResponse
#define SOAP_TYPE_ns6__addTaskResponse (139)
/* ns6:addTaskResponse */
struct ns6__addTaskResponse
{
public:
	ns4__TaskData *_addTaskReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:TaskData */
};
#endif

#ifndef SOAP_TYPE_ns6__addTask
#define SOAP_TYPE_ns6__addTask (142)
/* ns6:addTask */
struct ns6__addTask
{
public:
	ns4__TaskData *_task;	/* optional element of type ns4:TaskData */
};
#endif

#ifndef SOAP_TYPE_ns6__getPeopleResponse
#define SOAP_TYPE_ns6__getPeopleResponse (143)
/* ns6:getPeopleResponse */
struct ns6__getPeopleResponse
{
public:
	ArrayOf_USCOREtns1_USCOREPersonData *getPeopleReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfPersonData */
};
#endif

#ifndef SOAP_TYPE_ns6__getPeople
#define SOAP_TYPE_ns6__getPeople (147)
/* ns6:getPeople */
struct ns6__getPeople
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__getProjectResponse
#define SOAP_TYPE_ns6__getProjectResponse (148)
/* ns6:getProjectResponse */
struct ns6__getProjectResponse
{
public:
	ns4__ProjectData *_getProjectReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ProjectData */
};
#endif

#ifndef SOAP_TYPE_ns6__getProject
#define SOAP_TYPE_ns6__getProject (151)
/* ns6:getProject */
struct ns6__getProject
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getIterationResponse
#define SOAP_TYPE_ns6__getIterationResponse (152)
/* ns6:getIterationResponse */
struct ns6__getIterationResponse
{
public:
	ns4__IterationData *_getIterationReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:IterationData */
};
#endif

#ifndef SOAP_TYPE_ns6__getIteration
#define SOAP_TYPE_ns6__getIteration (155)
/* ns6:getIteration */
struct ns6__getIteration
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getTaskResponse
#define SOAP_TYPE_ns6__getTaskResponse (156)
/* ns6:getTaskResponse */
struct ns6__getTaskResponse
{
public:
	ns4__TaskData *_getTaskReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:TaskData */
};
#endif

#ifndef SOAP_TYPE_ns6__getTask
#define SOAP_TYPE_ns6__getTask (159)
/* ns6:getTask */
struct ns6__getTask
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getUserStoryResponse
#define SOAP_TYPE_ns6__getUserStoryResponse (160)
/* ns6:getUserStoryResponse */
struct ns6__getUserStoryResponse
{
public:
	ns4__UserStoryData *_getUserStoryReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:UserStoryData */
};
#endif

#ifndef SOAP_TYPE_ns6__getUserStory
#define SOAP_TYPE_ns6__getUserStory (163)
/* ns6:getUserStory */
struct ns6__getUserStory
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getProjectsResponse
#define SOAP_TYPE_ns6__getProjectsResponse (164)
/* ns6:getProjectsResponse */
struct ns6__getProjectsResponse
{
public:
	ArrayOf_USCOREtns1_USCOREProjectData *getProjectsReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfProjectData */
};
#endif

#ifndef SOAP_TYPE_ns6__getProjects
#define SOAP_TYPE_ns6__getProjects (168)
/* ns6:getProjects */
struct ns6__getProjects
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__addProjectResponse
#define SOAP_TYPE_ns6__addProjectResponse (169)
/* ns6:addProjectResponse */
struct ns6__addProjectResponse
{
public:
	ns4__ProjectData *_addProjectReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:ProjectData */
};
#endif

#ifndef SOAP_TYPE_ns6__addProject
#define SOAP_TYPE_ns6__addProject (172)
/* ns6:addProject */
struct ns6__addProject
{
public:
	ns4__ProjectData *_project;	/* optional element of type ns4:ProjectData */
};
#endif

#ifndef SOAP_TYPE_ns6__removeProjectResponse
#define SOAP_TYPE_ns6__removeProjectResponse (173)
/* ns6:removeProjectResponse */
struct ns6__removeProjectResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removeProject
#define SOAP_TYPE_ns6__removeProject (176)
/* ns6:removeProject */
struct ns6__removeProject
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__addIterationResponse
#define SOAP_TYPE_ns6__addIterationResponse (177)
/* ns6:addIterationResponse */
struct ns6__addIterationResponse
{
public:
	ns4__IterationData *_addIterationReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:IterationData */
};
#endif

#ifndef SOAP_TYPE_ns6__addIteration
#define SOAP_TYPE_ns6__addIteration (180)
/* ns6:addIteration */
struct ns6__addIteration
{
public:
	ns4__IterationData *_iteration;	/* optional element of type ns4:IterationData */
};
#endif

#ifndef SOAP_TYPE_ns6__removeIterationResponse
#define SOAP_TYPE_ns6__removeIterationResponse (181)
/* ns6:removeIterationResponse */
struct ns6__removeIterationResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removeIteration
#define SOAP_TYPE_ns6__removeIteration (184)
/* ns6:removeIteration */
struct ns6__removeIteration
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__addUserStoryResponse
#define SOAP_TYPE_ns6__addUserStoryResponse (185)
/* ns6:addUserStoryResponse */
struct ns6__addUserStoryResponse
{
public:
	ns4__UserStoryData *_addUserStoryReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:UserStoryData */
};
#endif

#ifndef SOAP_TYPE_ns6__addUserStory
#define SOAP_TYPE_ns6__addUserStory (188)
/* ns6:addUserStory */
struct ns6__addUserStory
{
public:
	ns4__UserStoryData *_story;	/* optional element of type ns4:UserStoryData */
};
#endif

#ifndef SOAP_TYPE_ns6__removeUserStoryResponse
#define SOAP_TYPE_ns6__removeUserStoryResponse (189)
/* ns6:removeUserStoryResponse */
struct ns6__removeUserStoryResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removeUserStory
#define SOAP_TYPE_ns6__removeUserStory (192)
/* ns6:removeUserStory */
struct ns6__removeUserStory
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getPlannedTasksForPersonResponse
#define SOAP_TYPE_ns6__getPlannedTasksForPersonResponse (193)
/* ns6:getPlannedTasksForPersonResponse */
struct ns6__getPlannedTasksForPersonResponse
{
public:
	ArrayOf_USCOREtns1_USCORETaskData *_getPlannedTasksForPersonReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfTaskData */
};
#endif

#ifndef SOAP_TYPE_ns6__getPlannedTasksForPerson
#define SOAP_TYPE_ns6__getPlannedTasksForPerson (196)
/* ns6:getPlannedTasksForPerson */
struct ns6__getPlannedTasksForPerson
{
public:
	int _personId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__removeTaskResponse
#define SOAP_TYPE_ns6__removeTaskResponse (197)
/* ns6:removeTaskResponse */
struct ns6__removeTaskResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removeTask
#define SOAP_TYPE_ns6__removeTask (200)
/* ns6:removeTask */
struct ns6__removeTask
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__getTimeEntryResponse
#define SOAP_TYPE_ns6__getTimeEntryResponse (201)
/* ns6:getTimeEntryResponse */
struct ns6__getTimeEntryResponse
{
public:
	ns4__TimeEntryData *_getTimeEntryReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:TimeEntryData */
};
#endif

#ifndef SOAP_TYPE_ns6__getTimeEntry
#define SOAP_TYPE_ns6__getTimeEntry (204)
/* ns6:getTimeEntry */
struct ns6__getTimeEntry
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__addTimeEntryResponse
#define SOAP_TYPE_ns6__addTimeEntryResponse (205)
/* ns6:addTimeEntryResponse */
struct ns6__addTimeEntryResponse
{
public:
	ns4__TimeEntryData *_addTimeEntryReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:TimeEntryData */
};
#endif

#ifndef SOAP_TYPE_ns6__addTimeEntry
#define SOAP_TYPE_ns6__addTimeEntry (208)
/* ns6:addTimeEntry */
struct ns6__addTimeEntry
{
public:
	ns4__TimeEntryData *_timeEntry;	/* optional element of type ns4:TimeEntryData */
};
#endif

#ifndef SOAP_TYPE_ns6__removeTimeEntryResponse
#define SOAP_TYPE_ns6__removeTimeEntryResponse (209)
/* ns6:removeTimeEntryResponse */
struct ns6__removeTimeEntryResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removeTimeEntry
#define SOAP_TYPE_ns6__removeTimeEntry (212)
/* ns6:removeTimeEntry */
struct ns6__removeTimeEntry
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__addNoteResponse
#define SOAP_TYPE_ns6__addNoteResponse (213)
/* ns6:addNoteResponse */
struct ns6__addNoteResponse
{
public:
	ns4__NoteData *_addNoteReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__addNote
#define SOAP_TYPE_ns6__addNote (216)
/* ns6:addNote */
struct ns6__addNote
{
public:
	ns4__NoteData *_note;	/* optional element of type ns4:NoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__getNotesForObjectResponse
#define SOAP_TYPE_ns6__getNotesForObjectResponse (217)
/* ns6:getNotesForObjectResponse */
struct ns6__getNotesForObjectResponse
{
public:
	ArrayOf_USCOREtns1_USCORENoteData *_getNotesForObjectReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfNoteData */
};
#endif

#ifndef SOAP_TYPE_ns6__getNotesForObject
#define SOAP_TYPE_ns6__getNotesForObject (221)
/* ns6:getNotesForObject */
struct ns6__getNotesForObject
{
public:
	int _attachedToId;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__addPersonResponse
#define SOAP_TYPE_ns6__addPersonResponse (222)
/* ns6:addPersonResponse */
struct ns6__addPersonResponse
{
public:
	ns4__PersonData *_addPersonReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns4:PersonData */
};
#endif

#ifndef SOAP_TYPE_ns6__addPerson
#define SOAP_TYPE_ns6__addPerson (225)
/* ns6:addPerson */
struct ns6__addPerson
{
public:
	ns4__PersonData *_object;	/* optional element of type ns4:PersonData */
};
#endif

#ifndef SOAP_TYPE_ns6__removePersonResponse
#define SOAP_TYPE_ns6__removePersonResponse (226)
/* ns6:removePersonResponse */
struct ns6__removePersonResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__removePerson
#define SOAP_TYPE_ns6__removePerson (229)
/* ns6:removePerson */
struct ns6__removePerson
{
public:
	int _id;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_ns6__deleteAttributeResponse
#define SOAP_TYPE_ns6__deleteAttributeResponse (230)
/* ns6:deleteAttributeResponse */
struct ns6__deleteAttributeResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_ns6__deleteAttribute
#define SOAP_TYPE_ns6__deleteAttribute (233)
/* ns6:deleteAttribute */
struct ns6__deleteAttribute
{
public:
	int _objectId;	/* required element of type xsd:int */
	char *_key;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns6__getAttributesWithPrefixResponse
#define SOAP_TYPE_ns6__getAttributesWithPrefixResponse (234)
/* ns6:getAttributesWithPrefixResponse */
struct ns6__getAttributesWithPrefixResponse
{
public:
	ns2__Map *_getAttributesWithPrefixReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns2:Map */
};
#endif

#ifndef SOAP_TYPE_ns6__getAttributesWithPrefix
#define SOAP_TYPE_ns6__getAttributesWithPrefix (237)
/* ns6:getAttributesWithPrefix */
struct ns6__getAttributesWithPrefix
{
public:
	int _objectId;	/* required element of type xsd:int */
	char *_prefix;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (238)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (239)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (241)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (242)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _objectId, struct ns6__getAttributesResponse &_param_1);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse &_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update_(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse_ &_param_3);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update__(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse__ &_param_4);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update___(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse___ &_param_5);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update____(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse____ &_param_6);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update_____(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse_____ &_param_7);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__update______(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__updateResponse______ &_param_8);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getAttribute(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _objectId, char *_key, char *&_getAttributeReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__setAttribute(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _objectId, char *_key, char *_value, struct ns6__setAttributeResponse &_param_9);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getNote(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getNoteResponse &_param_10);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removeNote(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removeNoteResponse &_param_11);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getPerson(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getPersonResponse &_param_12);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getIterations(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _projectId, struct ns6__getIterationsResponse &_param_13);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getCurrentIteration(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _projectId, struct ns6__getCurrentIterationResponse &_param_14);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getUserStories(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _containerId, struct ns6__getUserStoriesResponse &_param_15);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getTasks(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _containerId, struct ns6__getTasksResponse &_param_16);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getTimeEntries(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _containerId, struct ns6__getTimeEntriesResponse &_param_17);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getCurrentTasksForPerson(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _personId, struct ns6__getCurrentTasksForPersonResponse &_param_18);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__TaskData *_task, struct ns6__addTaskResponse &_param_19);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getPeople(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns6__getPeopleResponse &_param_20);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getProject(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getProjectResponse &_param_21);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getIteration(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getIterationResponse &_param_22);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getTaskResponse &_param_23);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getUserStory(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getUserStoryResponse &_param_24);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getProjects(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns6__getProjectsResponse &_param_25);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addProject(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__ProjectData *_project, struct ns6__addProjectResponse &_param_26);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removeProject(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removeProjectResponse &_param_27);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addIteration(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__IterationData *_iteration, struct ns6__addIterationResponse &_param_28);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removeIteration(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removeIterationResponse &_param_29);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addUserStory(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__UserStoryData *_story, struct ns6__addUserStoryResponse &_param_30);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removeUserStory(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removeUserStoryResponse &_param_31);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getPlannedTasksForPerson(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _personId, struct ns6__getPlannedTasksForPersonResponse &_param_32);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removeTask(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removeTaskResponse &_param_33);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getTimeEntry(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__getTimeEntryResponse &_param_34);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addTimeEntry(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__TimeEntryData *_timeEntry, struct ns6__addTimeEntryResponse &_param_35);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removeTimeEntry(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removeTimeEntryResponse &_param_36);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addNote(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__NoteData *_note, struct ns6__addNoteResponse &_param_37);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getNotesForObject(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _attachedToId, struct ns6__getNotesForObjectResponse &_param_38);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__addPerson(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__PersonData *_object, struct ns6__addPersonResponse &_param_39);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__removePerson(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _id, struct ns6__removePersonResponse &_param_40);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__deleteAttribute(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _objectId, char *_key, struct ns6__deleteAttributeResponse &_param_41);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns6__getAttributesWithPrefix(struct soap *soap, const char *soap_endpoint, const char *soap_action, int _objectId, char *_prefix, struct ns6__getAttributesWithPrefixResponse &_param_42);

#endif

/* End of XplannerSOAPStub.h */
