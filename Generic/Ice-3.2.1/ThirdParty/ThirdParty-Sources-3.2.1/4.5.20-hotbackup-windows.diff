*** db_hotbackup/db_hotbackup.c	2006-09-08 07:31:57.000000000 +1000
--- db_hotbackup/db_hotbackup.c	2007-03-22 14:34:23.000000000 +1100
***************
*** 473,482 ****
  		}
  		if (verbose)
  			printf("%s: removing %s\n", progname, buf);
! 		if ((ret = remove(buf)) != 0) {
! 			dbenv->err(dbenv, ret, "%s: remove", buf);
  			return (1);
- 		}
  	}
  
  	__os_dirfree(dbenv, names, fcnt);
--- 473,480 ----
  		}
  		if (verbose)
  			printf("%s: removing %s\n", progname, buf);
! 		if (__os_unlink(dbenv, buf) != 0)
  			return (1);
  	}
  
  	__os_dirfree(dbenv, names, fcnt);
***************
*** 660,666 ****
  				    "%s/%s: path too long", backupd, *names);
  				return (1);
  			}
! 			if (rename(from, to) == 0) {
  				if (verbose)
  					printf("%s: moving %s to %s\n",
  					   progname, from, to);
--- 658,664 ----
  				    "%s/%s: path too long", backupd, *names);
  				return (1);
  			}
! 			if (__os_rename(dbenv, from, to, 1) == 0) {
  				if (verbose)
  					printf("%s: moving %s to %s\n",
  					   progname, from, to);
***************
*** 712,724 ****
  	const char *file, *from_dir, *to_dir;
  	int verbose;
  {
! 	ssize_t nr, nw;
! 	size_t offset;
! 	int ret, rfd, wfd;
! 	char *buf, *taddr;
  
  	ret = 0;
! 	rfd = wfd = -1;
  
  	if (verbose)
  		printf("%s: copying %s/%s to %s/%s\n",
--- 710,722 ----
  	const char *file, *from_dir, *to_dir;
  	int verbose;
  {
! 	DB_FH *rfhp, *wfhp;
! 	size_t nr, nw;
! 	int ret;
! 	char *buf;
  
  	ret = 0;
! 	rfhp = wfhp = NULL;
  
  	if (verbose)
  		printf("%s: copying %s/%s to %s/%s\n",
***************
*** 746,753 ****
  		dbenv->errx(dbenv, "%s/%s: path too long", from_dir, file);
  		goto err;
  	}
! 	if ((rfd = open(buf, O_RDONLY, 0)) == -1) {
! 		dbenv->err(dbenv, errno, "%s", buf);
  		goto err;
  	}
  
--- 744,751 ----
  		dbenv->errx(dbenv, "%s/%s: path too long", from_dir, file);
  		goto err;
  	}
! 	if ((ret = __os_open(dbenv, buf, DB_OSO_RDONLY, 0, &rfhp)) != 0) {
! 		dbenv->err(dbenv, ret, "%s", buf);
  		goto err;
  	}
  
***************
*** 757,784 ****
  		dbenv->errx(dbenv, "%s/%s: path too long", to_dir, file);
  		goto err;
  	}
! 	if ((wfd = open(
! 	    buf, O_CREAT | O_TRUNC | O_WRONLY, __db_omode(OWNER_RW))) == -1)
! 		goto err;
! 
! 	/* Copy the data. */
! 	while ((nr = read(rfd, buf, MEGABYTE)) > 0)
! 		for (taddr = buf, offset = 0;
! 		    offset < (size_t)nr; taddr += nw, offset += (size_t)nw) {
! 			RETRY_CHK(((nw = write(wfd,
! 			    taddr, (u_int)(nr - offset))) < 0 ? 1 : 0), ret);
! 			if (ret != 0)
! 				break;
! 		}
! 	if (nr == -1) {
! 		dbenv->err(dbenv, errno, "%s/%s: read", from_dir, file);
  		goto err;
  	}
  
! 	if (ret != 0) {
! 		dbenv->err(dbenv, errno, "%s: write %s/%s", to_dir, file);
! 		goto err;
! 	}
  
  	if (0) {
  err:		ret = 1;
--- 755,771 ----
  		dbenv->errx(dbenv, "%s/%s: path too long", to_dir, file);
  		goto err;
  	}
! 	if ((ret = __os_open(dbenv, buf,
! 	    DB_OSO_CREATE | DB_OSO_TRUNC, __db_omode(OWNER_RW), &wfhp)) != 0) {
! 		dbenv->err(dbenv, ret, "%s", buf);
  		goto err;
  	}
  
! 	/* Copy the data. */
! 	while ((ret = __os_read(dbenv, rfhp, buf, MEGABYTE, &nr)) == 0 &&
! 	    nr > 0)
! 		if ((ret = __os_write(dbenv, wfhp, buf, nr, &nw)) != 0)
! 			break;
  
  	if (0) {
  err:		ret = 1;
***************
*** 786,799 ****
  	if (buf != NULL)
  		free(buf);
  
! 	if (rfd != -1)
! 		(void)close(rfd);
  
  	/* We may be running on a remote filesystem; force the flush. */
! 	if (wfd != -1 && (fsync(wfd) != 0 || close(wfd) != 0)) {
! 		dbenv->err(dbenv,
! 		    errno, "%s: fsync %s/%s", to_dir, file);
! 		ret = 1;
  	}
  	return (ret);
  }
--- 773,787 ----
  	if (buf != NULL)
  		free(buf);
  
! 	if (rfhp != NULL && __os_closehandle(dbenv, rfhp) != 0)
! 		ret = 1;
  
  	/* We may be running on a remote filesystem; force the flush. */
! 	if (wfhp != NULL) {
! 		if (__os_fsync(dbenv, wfhp) != 0)
! 			ret = 1;
! 		if (__os_closehandle(dbenv, wfhp) != 0)
! 			ret = 1;
  	}
  	return (ret);
  }
*** dist/win_exports.in	2006-08-11 00:19:32.000000000 +1000
--- dist/win_exports.in	2007-03-21 23:09:24.000000000 +1100
***************
*** 52,57 ****
--- 52,58 ----
  	__os_dirfree
  	__os_dirlist
  	__os_free
+ 	__os_fsync
  	__os_get_syserr
  	__os_getenv
  	__os_ioinfo
***************
*** 62,67 ****
--- 63,69 ----
  	__os_posix_err
  	__os_read
  	__os_realloc
+ 	__os_rename
  	__os_strdup
  	__os_umalloc
  	__os_unlink
*** build_windows/libdb.def	2006-08-11 00:19:32.000000000 +1000
--- build_windows/libdb.def	2007-03-21 23:15:57.000000000 +1100
***************
*** 48,177 ****
  	__os_dirfree	@45
  	__os_dirlist	@46
  	__os_free	@47
! 	__os_get_syserr	@48
! 	__os_getenv	@49
! 	__os_ioinfo	@50
! 	__os_malloc	@51
! 	__os_mkdir	@52
! 	__os_open	@53
! 	__os_openhandle	@54
! 	__os_posix_err	@55
! 	__os_read	@56
! 	__os_realloc	@57
! 	__os_strdup	@58
! 	__os_umalloc	@59
! 	__os_unlink	@60
! 	__os_write	@61
! 	__txn_id_set	@62
! 	__bam_adj_read	@63
! 	__bam_cadjust_read	@64
! 	__bam_cdel_read	@65
! 	__bam_curadj_read	@66
! 	__bam_merge_read	@67
! 	__bam_pgin	@68
! 	__bam_pgno_read	@69
! 	__bam_pgout	@70
! 	__bam_rcuradj_read	@71
! 	__bam_relink_43_read	@72
! 	__bam_relink_read	@73
! 	__bam_repl_read	@74
! 	__bam_root_read	@75
! 	__bam_rsplit_read	@76
! 	__bam_split_read	@77
! 	__crdel_inmem_create_read	@78
! 	__crdel_inmem_remove_read	@79
! 	__crdel_inmem_rename_read	@80
! 	__crdel_metasub_read	@81
! 	__db_addrem_read	@82
! 	__db_big_read	@83
! 	__db_cksum_read	@84
! 	__db_ctime	@85
! 	__db_debug_read	@86
! 	__db_dispatch	@87
! 	__db_dl	@88
! 	__db_dumptree	@89
! 	__db_err	@90
! 	__db_errx	@91
! 	__db_getlong	@92
! 	__db_getulong	@93
! 	__db_global_values	@94
! 	__db_isbigendian	@95
! 	__db_mkpath	@96
! 	__db_msg	@97
! 	__db_noop_read	@98
! 	__db_omode	@99
! 	__db_ovref_read	@100
! 	__db_pg_alloc_42_read	@101
! 	__db_pg_alloc_read	@102
! 	__db_pg_free_42_read	@103
! 	__db_pg_free_read	@104
! 	__db_pg_freedata_42_read	@105
! 	__db_pg_freedata_read	@106
! 	__db_pg_init_read	@107
! 	__db_pg_new_read	@108
! 	__db_pg_prepare_read	@109
! 	__db_pg_sort_read	@110
! 	__db_pgin	@111
! 	__db_pgout	@112
! 	__db_pr_callback	@113
! 	__db_relink_42_read	@114
! 	__db_rpath	@115
! 	__db_stat_pp	@116
! 	__db_stat_print_pp	@117
! 	__db_util_cache	@118
! 	__db_util_interrupted	@119
! 	__db_util_logset	@120
! 	__db_util_siginit	@121
! 	__db_util_sigresend	@122
! 	__db_verify_internal	@123
! 	__dbreg_register_read	@124
! 	__fop_create_read	@125
! 	__fop_file_remove_read	@126
! 	__fop_remove_read	@127
! 	__fop_rename_read	@128
! 	__fop_write_read	@129
! 	__ham_chgpg_read	@130
! 	__ham_copypage_read	@131
! 	__ham_curadj_read	@132
! 	__ham_get_meta	@133
! 	__ham_groupalloc_42_read	@134
! 	__ham_groupalloc_read	@135
! 	__ham_insdel_read	@136
! 	__ham_metagroup_42_read	@137
! 	__ham_metagroup_read	@138
! 	__ham_newpage_read	@139
! 	__ham_pgin	@140
! 	__ham_pgout	@141
! 	__ham_release_meta	@142
! 	__ham_replace_read	@143
! 	__ham_splitdata_read	@144
! 	__lock_list_print	@145
! 	__log_stat_pp	@146
! 	__mutex_set_wait_info	@147
! 	__os_abspath	@148
! 	__os_clock	@149
! 	__os_exists	@150
! 	__os_get_errno	@151
! 	__os_id	@152
! 	__os_mapfile	@153
! 	__os_seek	@154
! 	__os_set_errno	@155
! 	__os_sleep	@156
! 	__os_spin	@157
! 	__os_ufree	@158
! 	__os_unmapfile	@159
! 	__os_yield	@160
! 	__qam_add_read	@161
! 	__qam_del_read	@162
! 	__qam_delext_read	@163
! 	__qam_incfirst_read	@164
! 	__qam_mvptr_read	@165
! 	__qam_pgin_out	@166
! 	__rep_stat_print	@167
! 	__txn_child_read	@168
! 	__txn_ckp_42_read	@169
! 	__txn_ckp_read	@170
! 	__txn_recycle_read	@171
! 	__txn_regop_42_read	@172
! 	__txn_regop_read	@173
! 	__txn_xa_regop_read	@174
--- 48,179 ----
  	__os_dirfree	@45
  	__os_dirlist	@46
  	__os_free	@47
! 	__os_fsync	@48
! 	__os_get_syserr	@49
! 	__os_getenv	@50
! 	__os_ioinfo	@51
! 	__os_malloc	@52
! 	__os_mkdir	@53
! 	__os_open	@54
! 	__os_openhandle	@55
! 	__os_posix_err	@56
! 	__os_read	@57
! 	__os_realloc	@58
! 	__os_rename	@59
! 	__os_strdup	@60
! 	__os_umalloc	@61
! 	__os_unlink	@62
! 	__os_write	@63
! 	__txn_id_set	@64
! 	__bam_adj_read	@65
! 	__bam_cadjust_read	@66
! 	__bam_cdel_read	@67
! 	__bam_curadj_read	@68
! 	__bam_merge_read	@69
! 	__bam_pgin	@70
! 	__bam_pgno_read	@71
! 	__bam_pgout	@72
! 	__bam_rcuradj_read	@73
! 	__bam_relink_43_read	@74
! 	__bam_relink_read	@75
! 	__bam_repl_read	@76
! 	__bam_root_read	@77
! 	__bam_rsplit_read	@78
! 	__bam_split_read	@79
! 	__crdel_inmem_create_read	@80
! 	__crdel_inmem_remove_read	@81
! 	__crdel_inmem_rename_read	@82
! 	__crdel_metasub_read	@83
! 	__db_addrem_read	@84
! 	__db_big_read	@85
! 	__db_cksum_read	@86
! 	__db_ctime	@87
! 	__db_debug_read	@88
! 	__db_dispatch	@89
! 	__db_dl	@90
! 	__db_dumptree	@91
! 	__db_err	@92
! 	__db_errx	@93
! 	__db_getlong	@94
! 	__db_getulong	@95
! 	__db_global_values	@96
! 	__db_isbigendian	@97
! 	__db_mkpath	@98
! 	__db_msg	@99
! 	__db_noop_read	@100
! 	__db_omode	@101
! 	__db_ovref_read	@102
! 	__db_pg_alloc_42_read	@103
! 	__db_pg_alloc_read	@104
! 	__db_pg_free_42_read	@105
! 	__db_pg_free_read	@106
! 	__db_pg_freedata_42_read	@107
! 	__db_pg_freedata_read	@108
! 	__db_pg_init_read	@109
! 	__db_pg_new_read	@110
! 	__db_pg_prepare_read	@111
! 	__db_pg_sort_read	@112
! 	__db_pgin	@113
! 	__db_pgout	@114
! 	__db_pr_callback	@115
! 	__db_relink_42_read	@116
! 	__db_rpath	@117
! 	__db_stat_pp	@118
! 	__db_stat_print_pp	@119
! 	__db_util_cache	@120
! 	__db_util_interrupted	@121
! 	__db_util_logset	@122
! 	__db_util_siginit	@123
! 	__db_util_sigresend	@124
! 	__db_verify_internal	@125
! 	__dbreg_register_read	@126
! 	__fop_create_read	@127
! 	__fop_file_remove_read	@128
! 	__fop_remove_read	@129
! 	__fop_rename_read	@130
! 	__fop_write_read	@131
! 	__ham_chgpg_read	@132
! 	__ham_copypage_read	@133
! 	__ham_curadj_read	@134
! 	__ham_get_meta	@135
! 	__ham_groupalloc_42_read	@136
! 	__ham_groupalloc_read	@137
! 	__ham_insdel_read	@138
! 	__ham_metagroup_42_read	@139
! 	__ham_metagroup_read	@140
! 	__ham_newpage_read	@141
! 	__ham_pgin	@142
! 	__ham_pgout	@143
! 	__ham_release_meta	@144
! 	__ham_replace_read	@145
! 	__ham_splitdata_read	@146
! 	__lock_list_print	@147
! 	__log_stat_pp	@148
! 	__mutex_set_wait_info	@149
! 	__os_abspath	@150
! 	__os_clock	@151
! 	__os_exists	@152
! 	__os_get_errno	@153
! 	__os_id	@154
! 	__os_mapfile	@155
! 	__os_seek	@156
! 	__os_set_errno	@157
! 	__os_sleep	@158
! 	__os_spin	@159
! 	__os_ufree	@160
! 	__os_unmapfile	@161
! 	__os_yield	@162
! 	__qam_add_read	@163
! 	__qam_del_read	@164
! 	__qam_delext_read	@165
! 	__qam_incfirst_read	@166
! 	__qam_mvptr_read	@167
! 	__qam_pgin_out	@168
! 	__rep_stat_print	@169
! 	__txn_child_read	@170
! 	__txn_ckp_42_read	@171
! 	__txn_ckp_read	@172
! 	__txn_recycle_read	@173
! 	__txn_regop_42_read	@174
! 	__txn_regop_read	@175
! 	__txn_xa_regop_read	@176
