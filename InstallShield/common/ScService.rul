// ===========================================================================
// Copyright (c) 2004 by
// ZQ Interactive, Inc., Shanghai, PRC.,
// All Rights Reserved.  Unpublished rights reserved under the copyright
// laws of the United States.
// 
// The software contained  on  this media is proprietary to and embodies the
// confidential technology of ZQ Interactive, Inc. Possession, use,
// duplication or dissemination of the software and media is authorized only
// pursuant to a valid written license from ZQ Interactive, Inc.
// 
// This software is furnished under a  license  and  may  be used and copied
// only in accordance with the terms of  such license and with the inclusion
// of the above copyright notice.  This software or any other copies thereof
// may not be provided or otherwise made available to  any other person.  No
// title to and ownership of the software is hereby transferred.
//
// The information in this software is subject to change without notice and
// should not be construed as a commitment by ZQ Interactive, Inc.
//
// Ident : $Id: ScService.rul,v 1.2 2004/07/05 08:34:18 jshen Exp $
// Branch: $Name:  $
// Author: Jian Shen
// Desc  : Define the steps to setup and remove SeaChange service for 
//         Installshield
//
// Revision History: 
// ---------------------------------------------------------------------------
// $Log: ScService.rul,v $
// Revision 1.2  2004/07/05 08:34:18  jshen
// add service shell port
//
// Revision 1.1  2004/06/11 07:14:29  shao
// created, checked-in for Jian Shen
//
// ===========================================================================

#include "ifx.h"

//---------------------------------------------------------------------------------------
//
// @param szLocation           the location of the service shell, which in
//                             most cases is %ITVROOT%\exe
//
// @param szServiceName        The name that identifies the service to the Windows NT Service 
//                             Manager. This name also identifies the service in the Registry. 
//                             For example, IDS is the service name for the Directory service.
//
// @param szServicePort        The port number that the Service Management Utility (ManUtil) 
//                             uses to communicate with the service. Each service has a 
//                             unique management port., e.g "1021"  
//
// @param szServiceShellPort   The port number that the Service Management Utility (ManUtil) 
//                             uses to communicate with the service shell for the service. The
//                             service shell for each service has a unique management port.
//
// @param szExecutableName	   the executable file that the service shell
//                             launches to start the service.
//
// @param szAccount			   <account> <password> are the optional login account 
// @param szPassWord           and password for the service. The login account for a VOD 
//                             service is either "SeaChange" or "LocalSystem". 
//
// @param szDisplayName        the name that you want to appear in the Services dialog box.
//                             The naming convention for SeaChange VOD services is:
//                             SeaChange <descriptive name>, e.g SeaChange Directory Service.
//
// @param szProductName		   ITV ¨C if the service is a Command Center core service,
//                             ITV Applications ¨C if the service is an application service.
//
//---------------------------------------------------------------------------------------


prototype SetupService(STRING, STRING, STRING, STRING, STRING, 
                              STRING, STRING, STRING, STRING);                    
function SetupService(szLocation,
	   				  szServiceName,
					  szServicePort,
					  szServiceShellPort,
					  szExecutableName,
					  szAccount,
	 				  szPassWord,
					  szDisplayName,
					  szProductName
					  )  
	STRING  szApplication, szCommandLine;
	STRING	szKey, szName, szValue; 
	NUMBER 	nSize;
begin
    
    //
    // 1.Install and configure the service as a Windows NT service, 
	// which means that the Windows NT Service Manager can manage 
	// it
	//
	szApplication = szLocation ^ "\\instserv.exe"; 
	
	szCommandLine = szServiceName + " " +
	                szLocation    ^ "\\srvshell.exe " +
					"local "      +
					szAccount     + " " +
					szPassWord    + " " +
					"manual own";
					
    if (LaunchApp(szApplication, szCommandLine) < 0) then
        MessageBox ("Unable to launch " + szApplication + ".exe", SEVERE);
		abort;
    endif;


    //
    // 2.Configure the display name that appears in the Windows NT 
	// Services dialog box.
	//
	szCommandLine = szServiceName + " displayname= \"" + szDisplayName + "\"";
    if (LaunchApp(szApplication, szCommandLine) < 0) then
        MessageBox ("Unable to launch " + szApplication + ".exe", SEVERE);
		abort;
    endif;


    
	RegDBSetDefaultRoot (HKEY_LOCAL_MACHINE);
	
	//
	// 3.Configure the product name for the service.
	//
    szKey = "SYSTEM\\CurrentControlSet\\Services\\" + szServiceName;
	szName = "ProductName";
	szValue = szProductName;
    nSize = -1;
	RegDBSetKeyValueEx (szKey , szName , REGDB_STRING , szValue , nSize);


	//
	// 4.a Configure the Windows NT Event Viewer to log events for the
	// ervice and its service shell.
	//
    szKey = "SYSTEM\\CurrentControlSet\\Services\\EventLog\\" +
		"Application\\" + szServiceName;
	szName = "EventMessageFile";
	szValue = "%ITVROOT%\\exe\\ItvMessages.dll";
	RegDBSetKeyValueEx (szKey , szName , REGDB_STRING_EXPAND , szValue , nSize);

	szName = "Typessupported";
	szValue = "7";   // event type
	RegDBSetKeyValueEx (szKey , szName , REGDB_NUMBER , szValue , nSize);
    //
    // 4.b
    //
    szKey = szKey + "_shell";
    szName = "EventMessageFile";
	szValue = "%ITVROOT%\\exe\\ShellMsgs.dll";
	RegDBSetKeyValueEx (szKey , szName , REGDB_STRING_EXPAND , szValue , nSize);

    szName = "Typessupported";
	szValue = "7";   // event type
	RegDBSetKeyValueEx (szKey , szName , REGDB_NUMBER , szValue , nSize);


	// 
	// 5.a Configure the management port for the service and its service shell.
	//
    szKey = "SOFTWARE\\SeaChange\\Management\\CurrentVersion\\" +
		"Services\\" + szServiceName;
	szName = "MgmtPortNumber";
	szValue = szServicePort;
	RegDBSetKeyValueEx (szKey , szName , REGDB_NUMBER , szValue , nSize);
    //
    // 5.b
    //
	szKey = szKey + "_shell";
	szValue = szServiceShellPort;
	RegDBSetKeyValueEx (szKey , szName , REGDB_NUMBER , szValue , nSize);


	//
	// 6. Configure the image path, which is the file path of the executable
	// file that the service shell launches to start the service. Also 
	// configure the management port for the service shell
	//
	szKey = "SOFTWARE\\SeaChange\\" + szProductName + "\\CurrentVersion\\" +
		"Services\\" + szServiceName + "_shell";
	szName = "ImagePath";
	szValue = "%ITVROOT%\\exe\\" + szExecutableName;
	RegDBSetKeyValueEx (szKey , szName , REGDB_STRING_EXPAND , szValue , nSize);

    szName = "MgmtPortNumber";
	szValue = szServiceShellPort;
	RegDBSetKeyValueEx (szKey , szName , REGDB_NUMBER , szValue , nSize); 

	// end of the registery operation
    return 0;
end;


//
// @param szServiceName     the service name that will be uninstalled
// 
prototype UnInstallService(STRING, STRING);      

function UnInstallService(szLocation, szServiceName)  
    STRING szApplication, szCommandLine;
begin
    // no register operation 
	
	
	szApplication = szLocation ^ "\\instserv"; 
	szCommandLine = szServiceName + " remove";
	
	if (LaunchApp(szApplication, szCommandLine) < 0) then
        MessageBox ("Unable to launch " + szApplication + ".exe", SEVERE);
		abort;
    endif;    
    return 0;
end;
