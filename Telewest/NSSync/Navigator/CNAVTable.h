// ===========================================================================
// Copyright (c) 2004 by
// ZQ Interactive, Inc., Shanghai, PRC.,
// All Rights Reserved.  Unpublished rights reserved under the copyright
// laws of the United States.
// 
// The software contained  on  this media is proprietary to and embodies the
// confidential technology of ZQ Interactive, Inc. Possession, use,
// duplication or dissemination of the software and media is authorized only
// pursuant to a valid written license from ZQ Interactive, Inc.
// 
// This software is furnished under a  license  and  may  be used and copied
// only in accordance with the terms of  such license and with the inclusion
// of the above copyright notice.  This software or any other copies thereof
// may not be provided or otherwise made available to  any other person.  No
// title to and ownership of the software is hereby transferred.
//
// The information in this software is subject to change without notice and
// should not be construed as a commitment by ZQ Interactive, Inc.
//
// Name  : navWorkerProvider.h
// Author : Bernie Zhao (bernie.zhao@i-zq.com  Tianbin Zhao)
// Date  : 2004-12-13
// Desc  : class for accessing NAV tables
//
// Revision History:
// ---------------------------------------------------------------------------
// $Log: /ZQProjs/Telewest/NSSync/Navigator/CNAVTable.h $
// 
// 1     10-11-12 16:02 Admin
// Created.
// 
// 1     10-11-12 15:35 Admin
// Created.
// 
// 1     05-03-25 12:47 Bernie.zhao
// ===========================================================================
#include <afxdb.h>

#pragma once

/// this class is generated by class wizard, inherited from CRecordSet class
class CNAVTable : public CRecordset
{
public:
	CNAVTable(CDatabase* pDatabase = NULL,CString connectStr=_T("DSN=LAM;Description=local AM DB;UID=am;PWD=am;DATABASE=am1"));
	virtual ~CNAVTable();
	DECLARE_DYNAMIC(CNAVTable)

// Field/Param Data

// The string types below (if present) reflect the actual data type of the
// database field - CStringA for ANSI datatypes and CStringW for Unicode
// datatypes. This is to prevent the ODBC driver from performing potentially
// unnecessary conversions.  If you wish, you may change these members to
// CString types and the ODBC driver will perform all necessary conversions.
// (Note: You must use an ODBC driver version that is version 3.5 or greater
// to support both Unicode and these conversions).

//////////////////////////////////////////////////////////////////////////
// Default connect string
	CString _connectStr;

// Overrides
	// Wizard generated virtual function overrides
	public:

	/// get default connection string
	virtual CString GetDefaultConnect();	

	/// get default SQL for Recordset
	virtual CString GetDefaultSQL(); 	

	/// RFX support
	virtual void DoFieldExchange(CFieldExchange* pFX);	

// Implementation
#ifdef _DEBUG
	virtual void AssertValid() const;
	virtual void Dump(CDumpContext& dc) const;
#endif

};


