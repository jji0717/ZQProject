<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<TianShan>	
   <!-- common definitions -->
   <Definitions src="TianShanDef.xml"/>
	<!-- Configuration on RTI over NAS provision helper. It captures IP streaming traffic, performs RTF trick genenration and index
	     pacing then save the results into NAS file system.
	     
	     Note: 1 RTINAS session use 2 threads, so in CPE.xml threadpool setting, if we want max to 30 sessions, need to set "threads" to at least 65
	     
	-->
	<CPH_RTINas>
		<!-- Configuration on media content r/w buffer
		     attributes:
		       bufferSize    - the buffer size in byte per each read/write on the input media content
		-->
		<MediaSample bufferSize="65536"/>		
		
		 <!-- ProvisionMethod propertis configuration
          attributes:
              maxSessions - the maximal concurrent sessions that this instance can host
              maxBandwidth - the maximal bandwidth in Kbps that this instance can host
     -->
		<ProvisionMethod>
		   <Method name="SeaChange.NAS.RTI"  maxSessions="30" maxBandwidth="115200"/>
    </ProvisionMethod>
    
		<!-- Configuration on the ingestion session
		     attributes:
		       enableMD5	   - enable/disable caculate MD5 checksum for provisioned file(main file), default is 1
		       enableCacheModeForIndex		-	enable/disable cache mode for index file vstream write(VsOpen), default is 1
		       			On a single node Vstream6.0, enable cache for index would cause "VsSeek failed with VSTRM_TIMECODE_OUTOF_RANGE" sometime
		       preLoad			 - the session preload time in milliseconds, initialize the session in advance of the start time, random from "preLoad/2" to "preLoad + preLoad/2"
		-->
		<Session enableMD5="1" enableCacheModeForIndex="1" preLoad="10000"/>	
		
		<!-- Configuration on IP capture
	     	     attributes:
	     	        bindIp - the local IP for the capturer to bind
	     	        sessionTimeout - timeout in seconds for the session being captured, session will be stopped if no more data
	     	               can be captured within this timeout window.  default 300 second
	 	     	      winpcapKernelBuffer	-	winpcap kernel buffer size in MB for multicast capture, default 128MB
	     	        winpcapMinBufferCopy	-	winpcap minimal buffer size in KB to copy, default is 512KB	     	               
		-->
 		<Capture localIp="${IngestNetIf}" sessionTimeout="300" winpcapKernelBuffer="128" winpcapMinBufferCopy="512"/>

 	  <!-- dump the captured data for test or analysis when needed
		     attributes:
		       enable	-	"1" to enable RTI dump captured data to local NTFS, "0" disable, default "0"
		       dumpPath	-	the output path for dump files
		       deleteOnSuccess	-	"1" delete dumped file when ingestion success, "0" for not, defaut is "1"
		-->
 		<CaptureDumper enable="0" dumpPath="c:\temp" deleteOnSuccess="1" />

		<!-- Configuration on the index pacing session
		     attributes:
		       cacheDir  - the location where to temporarily save the cached data during index pacing
		       enableTrace - "1" if wish to trace the PacedIndex procedure in the log files
		-->
		<PacedIndex cacheDir="c:\temp" enableTrace="0"/>

		<!-- Configuration on the TrickGeneration parameters
		     attributes:
		       maxSessionNum  - max session number that the TrickGeneration will process. this parameter will affect memory allocation during
		                        initialization, so only put the number as neccesary
		       maxInputBufferBytes  - the size of RtfInputBuffer, should be equal or greater than the MediaSample::bufferSize
		       maxInputBuffersPerSession  - the buffer per session for TrickGeneration, default 128
		       sessionFailThreshold  - the session failure threshold. The TrickGeneration will be shut down if failed session count more than this value. 0 to disable, default is 0
		-->
		<TrickGeneration maxSessionNum="40" maxInputBufferBytes="65536" maxInputBuffersPerSession="128" sessionFailThreshold="0"/>

		<!-- Configuration on the process events
		-->
		<Event>
			<!-- Configuration on the progress events
			     attributes:
			       enable  - 1 to enable sending progress events
			-->
			<Progress enable="1"/>
			
			<!-- Configuration on the streamable events
			     attributes:
			       enable  - 1 to enable sending streamable events
			       lagAfterStart  - the time lag in second after the provision starts to notify streamable
			-->
			<Streamable enable="1" lagAfterStart="5" />
		</Event>
	</CPH_RTINas>
</TianShan>
