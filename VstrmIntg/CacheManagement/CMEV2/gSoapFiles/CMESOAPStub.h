/* CMESOAPStub.h
   Generated by gSOAP 2.7.10 from CMESOAPService.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef CMESOAPStub_H
#define CMESOAPStub_H
#include <vector>
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "stdsoap2.h"

namespace CMESOAP {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__cacheNotificationResponse
#define SOAP_TYPE_CMESOAP_ns1__cacheNotificationResponse (8)
/* ns1:cacheNotificationResponse */
struct ns1__cacheNotificationResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__cacheNotification
#define SOAP_TYPE_CMESOAP_ns1__cacheNotification (13)
/* ns1:cacheNotification */
struct ns1__cacheNotification
{
public:
	std::string _providerID;	/* required element of type xsd:string */
	std::string _providerAssetID;	/* required element of type xsd:string */
	std::string _clusterID;	/* required element of type xsd:string */
	LONG64 _status;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__sessionNotificationResponse
#define SOAP_TYPE_CMESOAP_ns1__sessionNotificationResponse (14)
/* ns1:sessionNotificationResponse */
struct ns1__sessionNotificationResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__sessionNotification
#define SOAP_TYPE_CMESOAP_ns1__sessionNotification (17)
/* ns1:sessionNotification */
struct ns1__sessionNotification
{
public:
	std::string _providerID;	/* required element of type xsd:string */
	std::string _providerAssetID;	/* required element of type xsd:string */
	int _func;	/* required element of type xsd:int */
	std::string _clusterID;	/* required element of type xsd:string */
	std::string _sessionID;	/* required element of type xsd:string */
	std::string _timeStamp;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__importNotificationResponse
#define SOAP_TYPE_CMESOAP_ns1__importNotificationResponse (20)
/* ns1:importNotificationResponse */
struct ns1__importNotificationResponse
{
public:
	LONG64 _importNotificationReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__importNotification
#define SOAP_TYPE_CMESOAP_ns1__importNotification (21)
/* ns1:importNotification */
struct ns1__importNotification
{
public:
	std::string _providerID;	/* required element of type xsd:string */
	std::string _providerAssetID;	/* required element of type xsd:string */
	std::string _clusterID;	/* required element of type xsd:string */
	LONG64 _increment;	/* required element of type xsd:long */
	LONG64 _lifetime;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__deletableNotificationResponse
#define SOAP_TYPE_CMESOAP_ns1__deletableNotificationResponse (23)
/* ns1:deletableNotificationResponse */
struct ns1__deletableNotificationResponse
{
public:
	LONG64 _deletableNotificationReturn;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_ns1__deletableNotification
#define SOAP_TYPE_CMESOAP_ns1__deletableNotification (24)
/* ns1:deletableNotification */
struct ns1__deletableNotification
{
public:
	std::string _providerID;	/* required element of type xsd:string */
	std::string _providerAssetID;	/* required element of type xsd:string */
	std::string _clusterID;	/* required element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_SOAP_ENV__Header
#define SOAP_TYPE_CMESOAP_SOAP_ENV__Header (25)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_CMESOAP_SOAP_ENV__Code
#define SOAP_TYPE_CMESOAP_SOAP_ENV__Code (26)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_SOAP_ENV__Detail
#define SOAP_TYPE_CMESOAP_SOAP_ENV__Detail (28)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_CMESOAP_SOAP_ENV__Reason
#define SOAP_TYPE_CMESOAP_SOAP_ENV__Reason (31)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_CMESOAP_SOAP_ENV__Fault
#define SOAP_TYPE_CMESOAP_SOAP_ENV__Fault (32)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_CMESOAP__QName
#define SOAP_TYPE_CMESOAP__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_CMESOAP__XML
#define SOAP_TYPE_CMESOAP__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 ns1__cacheNotification(struct soap*, std::string _providerID, std::string _providerAssetID, std::string _clusterID, LONG64 _status, struct ns1__cacheNotificationResponse &_param_1);

SOAP_FMAC5 int SOAP_FMAC6 ns1__sessionNotification(struct soap*, std::string _providerID, std::string _providerAssetID, int _func, std::string _clusterID, std::string _sessionID, std::string _timeStamp, struct ns1__sessionNotificationResponse &_param_2);

SOAP_FMAC5 int SOAP_FMAC6 ns1__importNotification(struct soap*, std::string _providerID, std::string _providerAssetID, std::string _clusterID, LONG64 _increment, LONG64 _lifetime, LONG64 &_importNotificationReturn);

SOAP_FMAC5 int SOAP_FMAC6 ns1__deletableNotification(struct soap*, std::string _providerID, std::string _providerAssetID, std::string _clusterID, LONG64 &_deletableNotificationReturn);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cacheNotification(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _providerID, std::string _providerAssetID, std::string _clusterID, LONG64 _status, struct ns1__cacheNotificationResponse &_param_1);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__sessionNotification(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _providerID, std::string _providerAssetID, int _func, std::string _clusterID, std::string _sessionID, std::string _timeStamp, struct ns1__sessionNotificationResponse &_param_2);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__importNotification(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _providerID, std::string _providerAssetID, std::string _clusterID, LONG64 _increment, LONG64 _lifetime, LONG64 &_importNotificationReturn);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__deletableNotification(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::string _providerID, std::string _providerAssetID, std::string _clusterID, LONG64 &_deletableNotificationReturn);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cacheNotification(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__sessionNotification(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__importNotification(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__deletableNotification(struct soap*);

} // namespace CMESOAP


#endif

/* End of CMESOAPStub.h */
